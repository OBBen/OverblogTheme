<!DOCTYPE html>
<html lang="{{ Blog.Lang|default('en') }}" itemscope itemtype="http://schema.org/Blog">
    <head>
        <!-- shortcut:[Meta] -->
        <!-- title -->
        {% title %}
        <!-- metas description, keyword, robots -->
        {% meta %}
        {% if Custom('googleplus_userid') is not empty %}
            <link rel="author" href="https://plus.google.com/{{ Custom('googleplus_userid') }}">
            <link rel="publisher" href="https://plus.google.com/{{ Custom('googleplus_userid') }}">
        {% endif %}

	    <!-- shortcut:[Includes] -->
	    
        <!-- favicon -->
	    {% favicon %}

	    <!-- SEO -->
	    {% if Custom('google_webmaster_id') is not empty %}
	        <meta name="google-site-verification" content="{{ Custom('google_webmaster_id') }}" />
	    {% endif %}
	    {% if Custom('msn_webmaster_id') is not empty %}
	        <meta name="msvalidate.01" content="{{ Custom('msn_webmaster_id') }}" />
	    {% endif %}

        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

        <!-- Font import -->
        <link href='http://fonts.googleapis.com/css?family=Sanchez' rel='stylesheet' type='text/css' />
        <link href='http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic' rel='stylesheet' type='text/css' />


        <!-- Theme CSS -->
	    <style type="text/css">
            /* ----------------------------- */
            /* ==RESET MOBILE */
            /* ----------------------------- */

            /* passer tous les éléments de largeur fixe en largeur automatique */
            body {
                margin: 0;
                padding: 0;
                width: auto;
            }

            /* fixer une largeur maximale  de 100 % aux éléments potentiellement problématiques */
            img, table, td, blockquote, code, pre, textarea, input, iframe, object, embed, video {
                max-width: 100%;
            }
            /* conserver le ratio des images et empêcher les débordements de boîtes dûs aux border ou padding */
            img {
                -webkit-box-sizing: border-box;
                    -moz-box-sizing: border-box;
                        box-sizing: border-box;
                height: auto; 
                width: auto;
            }

            /* gestion des mots longs */
            textarea, table, td, th, code, pre, samp {
                word-wrap: break-word; /* passage à la ligne forcé */
                -webkit-hyphens: auto; /* césure propre */
                    -moz-hyphens: auto;
                hyphens: auto;
            }
            code, pre, samp {
                white-space: pre-wrap; /* passage à la ligne spécifique pour les éléments à châsse fixe */
            }

            /* Passer à une seule colonne (à appliquer aux éléments multi-colonnes) */
            element1, element2 {
                float: none;
                width: auto;
            }

	    	/* ----------------------------- */
            /* ==BASICAL */
            /* ----------------------------- */
            body {
                color: #637583;
                font-family: 'Lato', sans-serif;
                font-size: 12px;
            }

            /* ----------------------------- */
            /* ==HEADER */
            /* ----------------------------- */
            .menu {
                background: url(//fdata.over-blog.net/99/00/00/01/images/kiwi/background.jpg) repeat;
                border-bottom: 1px solid #0f2638;
                height: 45px;
                position: fixed;
                top: 0;
                width: 100%;
            }
            .logo {
                background: url(//data.over-blog-kiwi.com/0/19/10/50/201212/ob_0c2f395481680da203d4269be71e555a_logo-overblog.png) no-repeat center center;
                display: block;
                height: 32px;
                padding: 5px 0 5px 13px;
                width: 98px;
            }
            .menu .button {
                background: url(//data.over-blog-kiwi.com/0/19/10/50/201212/ob_5e1392bde30a4f25184b815cb92ef0f0_mobile-sprite.png) no-repeat;
                border-left: 1px solid #143D60;
                display: block;
                height: 45px;
                position: absolute;
                top: 0;
                width: 49px;
            }
            .menu .button:before {
                background: #437094;
                content: "";
                height: 100%;
                position: absolute;
                left: 0; 
                width: 1px;
            }
            .menu .button:active {
                background-color: #194568;
            }
            .menu .home {
                background-position: center 14px;
                right: 50px;
            }
            .menu .sources-filter {
                background-position: 10px -33px;
                right: 0;
            }
            .sources-filter.active {
                background-color: #194568;
            }
            .all-sources {
                display: none;
                margin: 0;
                padding: 0;
                position: absolute;
                top: 46px;
                width: 100%;
            }
            .all-sources .source {
                background: #527DA0;
                border-bottom: 1px solid #275377;
                padding-left: 15px;
            }
            .all-sources .source:last-child {
                border-bottom-color: #112637;
            }
            .source a {
                background: url(//data.over-blog-kiwi.com/0/19/10/50/201212/ob_5e1392bde30a4f25184b815cb92ef0f0_mobile-sprite.png) no-repeat;
                color: #FFF;
                display: block;
                font-family: 'Sanchez', serif;
                padding: 8px 0 8px 25px;
                text-decoration: none;
                text-shadow: 1px 1px 0 #2D4B6D;
            }
            .source .facebook {
                background-position: -9px -86px;
            }
            .source .flickr {
                background-position: -9px -133px;
            }
            .source .instagram {
                background-position: -9px -179px;
            }
            .source .overblog {
                background-position: -9px -226px;
            }
            .source .twitter {
                background-position: -9px -273px;
            }
            .source .youtube {
                background-position: -9px -320px;
            }
            .blog-infos {
                margin-top: 46px;
                overflow: hidden;
                padding: 9px 8px;
            }
            .blog-avatar {
                display: block;
                float: left;
                margin: 0 10px 0 0;
                padding: 0;
                vertical-align: middle;
            }
            .blog-avatar img {
                height: 70px;
                vertical-align: middle;
                width: 70px;
            }
            .blog-title {
                font-family: 'Sanchez', serif;
                font-size: 17px;
                font-weight: normal;
                margin: 0;
                max-width: 100%;
            }
            .blog-title a {
                color: #0D263A;
                text-decoration: none;
            }
            .blog-description {
                color: #5F758A;
                font-family: 'Sanchez', serif;
                font-weight: normal;
            }
            /* ----------------------------- */
            /* ==CONTENT */
            /* ----------------------------- */
            .post {
                border-top: 1px solid #DADADA;
                padding: 1px 0 19px;
            }
            .post header {
                padding: 0 15px;
            }
            .post-title {
                font-family: 'Sanchez', serif;
                font-size: 16px;
                font-weight: normal;
                margin: 10px 0 0;
            }
            .post-title a {
                color: #0D263A;
                text-decoration: none;
            }
            .post-metas {
                font-family: 'Sanchez', serif;
                font-size: 12px;
                margin: 5px 0 0;
            }
            .post-body {
                margin-top: 19px;
            }
            .comment-number {
                color: #F3A40B;
                text-decoration: none;
                text-transform: uppercase;
            }
            .post p {
                padding: 0 15px;
            }






            .obbar-sharebar,
            .yui3-toolbar-ctn {
                display: none;
            }

            /* ----------------------------- */
            /* ==RETINA REQUIREMENTS */
            /* ----------------------------- */
            @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (min--moz-device-pixel-ratio: 1.3),only screen and (min-device-pixel-ratio: 1.3) {
                .menu {
                    background-image: url(http://data.over-blog-kiwi.com/0/19/10/50/201212/ob_baf7ae23d6dacf8f33b91c270616df69_background-2x.png);
                    background-size: 45px;
                }
                .logo {
                    background-image: url(http://data.over-blog-kiwi.com/0/19/10/50/201212/ob_9108fa27171c263ca5e816f0c3b99629_logo-overblog-2x.png);
                    background-size: 96px 32px;
                }
                .menu .button {
                    background-image: url(http://data.over-blog-kiwi.com/0/19/10/50/201212/ob_ffa36fee3fbafd9eddcc23753d5ac71f_mobile-sprite-2x.png);
                    background-size: 34px;
                }
                .source a {
                    background-image: url(http://data.over-blog-kiwi.com/0/19/10/50/201212/ob_ffa36fee3fbafd9eddcc23753d5ac71f_mobile-sprite-2x.png);
                    background-size: 34px;
                }
            }
	    </style>
	</head>
	<body>
        <!-- Init Facebook script -->
		<div id="fb-root"></div>
	    
        <div class="global">
            <!-- HEADER -->
            <header class="blog-header">

                <!-- Menu -->
                <nav class="menu">
                    <a class="logo" href="{{ Blog.Url }}" alt="" title=""></a>
                    
                    <a class="button home" href="{{ Blog.Url }}" title="{{ Lang.Get('Home') }}" ></a>
                    
                    <a class="button sources-filter" href="#" title="{{ Lang.Get('Sources') }}"></a>
                    
                    <ul class="all-sources">
                        <li class="source">
                            <a class="facebook"  href="">Facebook</a>
                        </li>
                        <li class="source">
                            <a class="flickr" href="">Flickr</a>
                        </li>
                        <li class="source">
                            <a class="instagram" href="">Instagram</a>
                        </li>
                        <li class="source">
                            <a class="overblog" href="">Overblog</a>
                        </li>
                        <li class="source">
                            <a class="twitter" href="">Twitter</a>
                        </li>
                        <li class="source">
                            <a class="youtube" href="">YouTube</a>
                        </li>
                    </ul>
                </nav>

                <div class="blog-infos">
                    <!-- Blog avatar -->
                    <a class="blog-avatar" href="{{ Blog.Url }}">
                        <img src="{{ Blog.Avatar|resize(140) }}" alt="" title="" />
                    </a>

                    <!-- Blog title -->
                    <h1 class="blog-title">
                        <a href="{{ Blog.Url }}" title="{{ Blog.Description }}">{{ Blog.Title }}</a>
                    </h1>
                    {% if Blog.Description is not empty %}
                        <!-- Blog description -->
                        <strong class="blog-description">{{ Blog.Description }}</strong>
                    {% endif %}
                </div>
            </header>

            <!-- CONTENT -->
	        <section class="content">
                <!-- Contact page -->
                {% if isSpecial %}
                    <article class="special">
                        {{ SpecialContent }}
                    </article>
                {% else %}
                    <!-- List blog posts -->
                    {% list Posts %}
                        <article class="post" itemprop="blogPosts" itemscope itemtype="http://schema.org/BlogPosting">
                            <img src="{{ Post.Cover }}" alt="" titile="" />
                            <header itemprop="headline">
                                <!-- Post title -->
                                <h2 class="post-title">
                                    <a itemprop="name" href="{{ Post.Permalink }}" title="{{ Post.Snippet }}" itemprop="url" rel="bookmark">
                                        {% if Post.Title is not empty %}
                                            {{ Post.Title }}
                                        {% else %}
                                            {{ Lang.Get('Published from') }} {% list Post.Sources %}{{ Lang.Get(Source) }}{% if not loop.last %}{{ Lang.Get('and') }} {% endif %}{% endlist %}
                                        {% endif %}
                                    </a>
                                </h2>

                                <!-- Post author &amp; post date -->
                                <p class="post-metas">
                                    {% if Post.Author is not empty %}
                                        <span class="author" itemprop="author">
                                            {{ Lang.Get('by') }} {{ Post.Author }}
                                        </span>
                                    {% endif %}
                                    <span class="date">
                                        <time itemprop="datePublished" datetime="{{ Post.Date|date("Y-m-d") }}">{{ Post.Date|datel(Lang.Get('Default date format'))|title }}</time>
                                    </span>
                                </p>

                                <!-- Post tags -->
                                {% if Post.Tags is not empty %}
                                    <p class="post-tags">
                                        <span>{{ Lang.Get('Tagged on') }} : </span>
                                        {% list Post.Tags %}
                                            <a href="{{ Tag.Url }}" rel="tag" itemprop="keywords">#{{ Tag.Title }}</a>{% if loop.last is empty %}, {% endif %}
                                        {% endlist %}
                                    </p>
                                {% endif %}

                                
                            </header>

                            <!-- Post body or post sections or post snippet -->
                            <div class="post-body" itemprop="ArticleBody">
                                {{ Post.Body }}
                            </div>

                            <footer>
                                {% if not isSingle %}
                                    {% if Custom("comment") == "Disqus" and Custom('comment_disqus') is not empty %}
                                        <a class="comment-number" href="{{ Post.Permalink }}#disqus_thread" title="{{ Lang.Get('comments') }}"></a>
                                    {% else %}
                                        <a class="comment-number" href="{{ Post.PermaLink }}#comments" title="{{ Lang.Get('comments') }}">
                                            {% if Custom("comment") == "Facebook" %}
                                                <fb:comments-count href="{{ Post.Permalink }}"></fb:comments-count> {{ Lang.Get('comment(s)') }}
                                                {{ Lang.Get('comment(s)') }}
                                            {% else %}
                                                {{ Post.CommentCount(Lang.Get('comment'), Lang.Get('comments')) }}
                                            {% endif %}
                                       </a>
                                    {% endif %}
                                {% endif %}

                                <!-- Pagination on single post page -->
                                {% if Navigation.PreviousPost is not empty or Navigation.NextPost is not empty %}
                                    <nav class="pagination">
                                        {% if Navigation.PreviousPost is not empty %}
                                            <a href="{{ Navigation.PreviousPost.Permalink }}" class="previous">
                                                {% if Navigation.PreviousPost.Title is not empty %}
                                                    {{ Navigation.PreviousPost.Title }}
                                                {% else %}
                                                    {{ Lang.Get('Previous post') }}
                                                {% endif %}
                                            </a>
                                        {% endif %}
                                        {% if Navigation.NextPost is not empty %}
                                            <a href="{{ Navigation.NextPost.Permalink }}" class="next">
                                                {% if Navigation.NextPost.Title is not empty %}
                                                    {{ Navigation.NextPost.Title }}
                                                {% else %}
                                                    {{ Lang.Get('Next post') }}
                                                {% endif %}
                                            </a>
                                        {% endif %}
                                    </nav>
                                {% endif %}

                                <!-- Post comments -->
                                {% if isSingle and not isPage %}
                                    <div id="comments" class="item-comments">
                                        <h3>{{ Lang.Get('Comment this post') }}</h3>
                                        {% if Custom('comment') == 'Facebook' %}
                                            <div class="fb-comments" data-href="{{ Post.Permalink }}" data-num-posts="2" data-width="600" data-colorscheme="{{ Custom('facebook_comments_color') }}"></div>
                                        {% elseif Custom('comment') == 'Disqus' and Custom('comment_disqus') is not empty %}
                                            <div id="disqus_thread"></div>
                                            <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
                                        {% else %}
                                            {{ Post.Comments }}
                                        {% endif %}
                                    </div>
                                {% endif %}
                            </footer>
                        </article>
                    <!-- If no post found -->
                    {% else %}
                        <article class="no-result">
                            <p>{{ Lang.Get('No post found') }}.</p>
                        </article>
                    {% endlist %}
                {% endif %}
            </section>
            
            <!-- <footer>
                <p>
                    <a href="">{{ Lang.Get('Contact us') }}</a>
                    <a href="">{{ Lang.Get('Standard view') }}</a>
                </p>
            </footer> -->
	    </div>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"></script>

		<script>
            {% if Custom('comment') == 'Disqus' and Custom('comment_disqus') is not empty %}
                // Disqus comments
                var disqus_shortname = '{{ Custom('comment_disqus') }}';
                (function() {
                    var dsq = document.createElement('script');
                        dsq.type = 'text/javascript';
                        dsq.async = true;
                        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();

                // Disqus comments counter
                var disqus_shortname = "{{ Custom('comment_disqus') }}";
                (function () {
                    var s = document.createElement('script');
                        s.async = true;
                        s.type = 'text/javascript';
                        s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
                    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
                }());
            {% elseif Custom('comment') == 'Facebook' %}
                // Facebook comments
                (function(d, s, id) {
                    var js,
                        fjs = d.getElementsByTagName(s)[0];
                    if (d.getElementById(id)) return;
                        js = d.createElement(s);
                        js.id = id;
                        js.src = "//connect.facebook.net/{{ Blog.Lang}}_{{ Blog.Lang|upper }}/all.js#xfbml=1&amp;appId={{ Custom('facebook_appid')|default('284865384904712')}}";
                    fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
    	    {% endif %}

            {% if Custom('google_analytics') is not empty %}
    		    // Google Analytics
    		    window.google_analytics_uacct = '{{Custom('google_analytics')}}';
    		    var _gaq = _gaq || [];
    		        _gaq.push(['_setAccount', '{{Custom('google_analytics')}}']);
    		        _gaq.push(['_trackPageview']);
    		        _gaq.push(['_trackPageLoadTime']);

    		    (function() {
    		        var ga = document.createElement('script');
                        ga.type = 'text/javascript';
                        ga.async = true;
    		            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    		        var s = document.getElementsByTagName('script')[0];
                        s.parentNode.insertBefore(ga, s);
    		    })();
    		{% endif %}

            $(document).ready(function() {
                $('a.sources-filter').click(function() {
                    $(this).toggleClass('active').siblings('ul.all-sources').slideToggle(200);
                    return false;
                });
            });
        </script>
	</body>
</html>
